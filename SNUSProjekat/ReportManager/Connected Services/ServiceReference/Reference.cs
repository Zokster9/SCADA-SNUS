//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TriggeredAlarm", Namespace="http://schemas.datacontract.org/2004/07/SNUSProjekat")]
    [System.SerializableAttribute()]
    public partial class TriggeredAlarm : ReportManager.ServiceReference.Alarm {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TriggerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TriggerValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TriggerTime {
            get {
                return this.TriggerTimeField;
            }
            set {
                if ((this.TriggerTimeField.Equals(value) != true)) {
                    this.TriggerTimeField = value;
                    this.RaisePropertyChanged("TriggerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TriggerValue {
            get {
                return this.TriggerValueField;
            }
            set {
                if ((this.TriggerValueField.Equals(value) != true)) {
                    this.TriggerValueField = value;
                    this.RaisePropertyChanged("TriggerValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/SNUSProjekat")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReportManager.ServiceReference.TriggeredAlarm))]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValue", Namespace="http://schemas.datacontract.org/2004/07/SNUSProjekat")]
    [System.SerializableAttribute()]
    public partial class TagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValueTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValueTime {
            get {
                return this.ValueTimeField;
            }
            set {
                if ((this.ValueTimeField.Equals(value) != true)) {
                    this.ValueTimeField = value;
                    this.RaisePropertyChanged("ValueTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IReportManagerService")]
    public interface IReportManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByTime", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByTimeResponse")]
        ReportManager.ServiceReference.TriggeredAlarm[] GetAllTriggeredAlarmsByTime(System.DateTime lowLimit, System.DateTime highLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByTime", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByTimeResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TriggeredAlarm[]> GetAllTriggeredAlarmsByTimeAsync(System.DateTime lowLimit, System.DateTime highLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByPriorityResponse")]
        ReportManager.ServiceReference.TriggeredAlarm[] GetAllTriggeredAlarmsByPriority(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTriggeredAlarmsByPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TriggeredAlarm[]> GetAllTriggeredAlarmsByPriorityAsync(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValuesByTime", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesByTimeResponse")]
        ReportManager.ServiceReference.TagValue[] GetAllTagValuesByTime(System.DateTime lowLimit, System.DateTime highLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValuesByTime", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesByTimeResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesByTimeAsync(System.DateTime lowLimit, System.DateTime highLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastAnalogInputTagValue", ReplyAction="http://tempuri.org/IReportManagerService/GetLastAnalogInputTagValueResponse")]
        ReportManager.ServiceReference.TagValue[] GetLastAnalogInputTagValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastAnalogInputTagValue", ReplyAction="http://tempuri.org/IReportManagerService/GetLastAnalogInputTagValueResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetLastAnalogInputTagValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastDigitalInputTagValue", ReplyAction="http://tempuri.org/IReportManagerService/GetLastDigitalInputTagValueResponse")]
        ReportManager.ServiceReference.TagValue[] GetLastDigitalInputTagValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastDigitalInputTagValue", ReplyAction="http://tempuri.org/IReportManagerService/GetLastDigitalInputTagValueResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetLastDigitalInputTagValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValues", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesResponse")]
        ReportManager.ServiceReference.TagValue[] GetAllTagValues(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValues", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerServiceChannel : ReportManager.ServiceReference.IReportManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference.IReportManagerService>, ReportManager.ServiceReference.IReportManagerService {
        
        public ReportManagerServiceClient() {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ServiceReference.TriggeredAlarm[] GetAllTriggeredAlarmsByTime(System.DateTime lowLimit, System.DateTime highLimit) {
            return base.Channel.GetAllTriggeredAlarmsByTime(lowLimit, highLimit);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TriggeredAlarm[]> GetAllTriggeredAlarmsByTimeAsync(System.DateTime lowLimit, System.DateTime highLimit) {
            return base.Channel.GetAllTriggeredAlarmsByTimeAsync(lowLimit, highLimit);
        }
        
        public ReportManager.ServiceReference.TriggeredAlarm[] GetAllTriggeredAlarmsByPriority(int priority) {
            return base.Channel.GetAllTriggeredAlarmsByPriority(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TriggeredAlarm[]> GetAllTriggeredAlarmsByPriorityAsync(int priority) {
            return base.Channel.GetAllTriggeredAlarmsByPriorityAsync(priority);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetAllTagValuesByTime(System.DateTime lowLimit, System.DateTime highLimit) {
            return base.Channel.GetAllTagValuesByTime(lowLimit, highLimit);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesByTimeAsync(System.DateTime lowLimit, System.DateTime highLimit) {
            return base.Channel.GetAllTagValuesByTimeAsync(lowLimit, highLimit);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetLastAnalogInputTagValue() {
            return base.Channel.GetLastAnalogInputTagValue();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetLastAnalogInputTagValueAsync() {
            return base.Channel.GetLastAnalogInputTagValueAsync();
        }
        
        public ReportManager.ServiceReference.TagValue[] GetLastDigitalInputTagValue() {
            return base.Channel.GetLastDigitalInputTagValue();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetLastDigitalInputTagValueAsync() {
            return base.Channel.GetLastDigitalInputTagValueAsync();
        }
        
        public ReportManager.ServiceReference.TagValue[] GetAllTagValues(string tagName) {
            return base.Channel.GetAllTagValues(tagName);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesAsync(string tagName) {
            return base.Channel.GetAllTagValuesAsync(tagName);
        }
    }
}
